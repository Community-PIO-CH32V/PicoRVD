#include "SLDebugger.h"

//------------------------------------------------------------------------------

unsigned char blink_bin[] = {
  0x6f, 0x00, 0x80, 0x24, 0x00, 0x00, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00, 0xda, 0x02, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x93, 0x85, 0x05, 0x00, 0x85, 0x05, 0x89, 0x05,
  0x8d, 0x05, 0x91, 0x05, 0x95, 0x05, 0x99, 0x05, 0x9d, 0x05, 0xa1, 0x05,
  0xa5, 0x05, 0xa9, 0x05, 0xad, 0x05, 0xb1, 0x05, 0xb5, 0x05, 0xb9, 0x05,
  0xbd, 0x05, 0xc1, 0x05, 0xc5, 0x05, 0xc9, 0x05, 0xcd, 0x05, 0xd1, 0x05,
  0xd5, 0x05, 0xd9, 0x05, 0xdd, 0x05, 0xe1, 0x05, 0xe5, 0x05, 0xe9, 0x05,
  0xed, 0x05, 0xf1, 0x05, 0xf5, 0x05, 0xf9, 0x05, 0xfd, 0x05, 0x93, 0x85,
  0x05, 0x02, 0x93, 0x85, 0x15, 0x02, 0x93, 0x85, 0x25, 0x02, 0x93, 0x85,
  0x35, 0x02, 0x93, 0x85, 0x45, 0x02, 0x93, 0x85, 0x55, 0x02, 0x93, 0x85,
  0x65, 0x02, 0x93, 0x85, 0x75, 0x02, 0x93, 0x85, 0x85, 0x02, 0x93, 0x85,
  0x95, 0x02, 0x93, 0x85, 0xa5, 0x02, 0x93, 0x85, 0xb5, 0x02, 0x93, 0x85,
  0xc5, 0x02, 0x93, 0x85, 0xd5, 0x02, 0x93, 0x85, 0xe5, 0x02, 0x93, 0x85,
  0xf5, 0x02, 0x93, 0x85, 0x05, 0x03, 0x93, 0x85, 0x15, 0x03, 0x93, 0x85,
  0x25, 0x03, 0x93, 0x85, 0x35, 0x03, 0x93, 0x85, 0x45, 0x03, 0x93, 0x85,
  0x55, 0x03, 0x93, 0x85, 0x65, 0x03, 0x93, 0x85, 0x75, 0x03, 0x93, 0x85,
  0x85, 0x03, 0x93, 0x85, 0x95, 0x03, 0x93, 0x85, 0xa5, 0x03, 0x93, 0x85,
  0xb5, 0x03, 0x7d, 0x15, 0x31, 0xf5, 0x82, 0x80, 0x51, 0x11, 0x37, 0x07,
  0x00, 0x01, 0x06, 0xc4, 0x22, 0xc2, 0x26, 0xc0, 0xb7, 0x17, 0x02, 0x40,
  0x05, 0x07, 0x98, 0xc3, 0x23, 0xa2, 0x07, 0x00, 0x37, 0x27, 0x02, 0x40,
  0x85, 0x46, 0x14, 0xc3, 0x37, 0x07, 0x9f, 0x00, 0x98, 0xc7, 0xb7, 0x06,
  0x00, 0x02, 0x37, 0x17, 0x02, 0x40, 0x1c, 0x43, 0xf5, 0x8f, 0xf5, 0xdf,
  0x5c, 0x43, 0xa1, 0x46, 0xf1, 0x9b, 0x93, 0xe7, 0x27, 0x00, 0x5c, 0xc3,
  0xb7, 0x17, 0x02, 0x40, 0xd8, 0x43, 0x31, 0x8b, 0xe3, 0x1e, 0xd7, 0xfe,
  0x98, 0x4f, 0xb7, 0x06, 0xf1, 0xff, 0xfd, 0x16, 0x13, 0x67, 0x07, 0x02,
  0x98, 0xcf, 0xb7, 0x17, 0x01, 0x40, 0x03, 0xa7, 0x07, 0x40, 0xd1, 0x44,
  0x41, 0x9b, 0x23, 0xa0, 0xe7, 0x40, 0x03, 0xa7, 0x07, 0x40, 0x13, 0x67,
  0x37, 0x00, 0x23, 0xa0, 0xe7, 0x40, 0x03, 0xa7, 0x07, 0x40, 0x75, 0x8f,
  0x23, 0xa0, 0xe7, 0x40, 0x03, 0xa7, 0x07, 0x40, 0xb7, 0x06, 0x03, 0x00,
  0x55, 0x8f, 0x23, 0xa0, 0xe7, 0x40, 0x37, 0x14, 0x01, 0x40, 0xc5, 0x47,
  0x23, 0x28, 0xf4, 0x40, 0x95, 0x67, 0x13, 0x85, 0x07, 0xe2, 0x81, 0x45,
  0x65, 0x35, 0x37, 0x07, 0x11, 0x00, 0x95, 0x67, 0x23, 0x28, 0xe4, 0x40,
  0x81, 0x45, 0x13, 0x85, 0x07, 0xe2, 0xfd, 0x14, 0x51, 0x3d, 0xe1, 0xfc,
  0x37, 0x14, 0x01, 0x40, 0xc5, 0x47, 0xbd, 0x64, 0x23, 0x28, 0xf4, 0x40,
  0x13, 0x85, 0x04, 0xa6, 0x81, 0x45, 0xbd, 0x3d, 0xb7, 0x07, 0x11, 0x00,
  0x23, 0x28, 0xf4, 0x40, 0x81, 0x45, 0x13, 0x85, 0x04, 0xa6, 0xbd, 0x35,
  0xf1, 0xbf, 0x2a, 0x96, 0xaa, 0x87, 0x63, 0x93, 0xc7, 0x00, 0x82, 0x80,
  0x23, 0x80, 0xb7, 0x00, 0x85, 0x07, 0xd5, 0xbf, 0x97, 0x01, 0x00, 0x20,
  0x93, 0x81, 0x81, 0x5b, 0x13, 0x81, 0x01, 0x00, 0x93, 0x02, 0x00, 0x08,
  0x73, 0x90, 0x02, 0x30, 0x93, 0x02, 0x30, 0x00, 0x73, 0x90, 0x42, 0x80,
  0x97, 0x02, 0x00, 0x00, 0x93, 0x82, 0xc2, 0xd9, 0x93, 0xe2, 0x32, 0x00,
  0x73, 0x90, 0x52, 0x30, 0xb7, 0x07, 0x00, 0x20, 0x03, 0xa5, 0x07, 0x00,
  0xb7, 0x07, 0x00, 0x20, 0x83, 0xa7, 0x07, 0x00, 0x13, 0x07, 0xd5, 0xff,
  0x13, 0x06, 0x00, 0x00, 0x63, 0xe8, 0xe7, 0x00, 0x13, 0x86, 0x37, 0x00,
  0x33, 0x06, 0xa6, 0x40, 0x13, 0x76, 0xc6, 0xff, 0x93, 0x05, 0x00, 0x00,
  0x59, 0x3f, 0x03, 0x27, 0x00, 0x2e, 0xb7, 0x06, 0x00, 0x20, 0xb7, 0x07,
  0x00, 0x20, 0x83, 0xa7, 0x07, 0x00, 0x83, 0xa6, 0x06, 0x00, 0x63, 0x98,
  0xd7, 0x00, 0x93, 0x07, 0x80, 0x15, 0x73, 0x90, 0x17, 0x34, 0x73, 0x00,
  0x20, 0x30, 0x03, 0x26, 0x07, 0x00, 0x13, 0x07, 0x47, 0x00, 0x93, 0x87,
  0x47, 0x00, 0x23, 0xae, 0xc7, 0xfe, 0x6f, 0xf0, 0x1f, 0xfe, 0x6f, 0x00,
  0x00, 0x00, 0x00, 0x00
};
unsigned int blink_bin_len = 736;

//------------------------------------------------------------------------------

void test_flash_write(SLDebugger& sl) {
  sl.write_flash2(0x00000000, blink_bin, blink_bin_len);
}

//------------------------------------------------------------------------------

void test_unaligned_transfers(SLDebugger& sl) {
  uint8_t blank[16] = {0};
  uint8_t stripe[8] = {1, 2, 3, 4, 5, 6, 7, 8};
  uint8_t buf[16] = {0};

  sl.set_block_unaligned(0x20000700, blank, 16);
  sl.set_block_unaligned(0x20000700 + 16, blank, 16);
  sl.set_block_unaligned(0x20000700 + 8, stripe, 8);

  for(int i = 0; i < 16; i++) {
    sl.get_block_unaligned(0x20000700 + i, buf, 16);
    for (int x = 0; x < 16; x++) printf("%02x", buf[x]);
    printf("\n");
  }

#if 0
  for(int i = 0; i < 8; i++) {
    sl.set_block_unaligned(0x20000700, blank, 16);
    sl.set_block_unaligned(0x20000700 + i, stripe, 8);
    sl.get_block_unaligned(0x20000700, buf, 16);
    for (int x = 0; x < 16; x++) printf("%02x", buf[x]);
    printf("\n");
  }
#endif

#if 0
  uint32_t buf[512];
  memset(buf, 0, sizeof(buf));
  sl.set_block_unaligned(0x20000000, buf, 2048);
  sl.get_block_unaligned(0x20000000, buf, 2048);

  for (int y = 0; y < 64; y++) {
    for (int x = 0; x < 8; x++) {
      printf("0x%08x ", buf[x + 8*y]);
    }
    printf("\n");
  }
#endif
}

//------------------------------------------------------------------------------
